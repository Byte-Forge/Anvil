language: cpp
dist: trusty
sudo: false

compiler:
  - clang
  - gcc

os:
  - linux
  - osx

addons:
  apt:
    sources: 
      - llvm-toolchain-precise-3.7
      - george-edison55-precise-backports
      - ubuntu-toolchain-r-test
    packages:
      - clang-3.7
      - g++-5
      - gcc-5
      - cmake
      - cmake-data
      - libluajit-5.1-dev
      - liblua5.1-0-dev
      - libpthread-stubs0-dev
      - libgl1-mesa-dev
      - xorg-dev
      - libfreetype6-dev
      - libopenal-dev
git:
  submodules: false

install:
  - cmake --version
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew update ; brew install llvm freetype lua luajit openal-soft;brew outdated gcc || brew upgrade gcc ; brew outdated cmake || brew upgrade cmake ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" -a "$CXX" = "g++" ]; then export CXX="g++-5" CC="gcc-5"; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" -a "$CXX" = "clang++" ]; then export CXX="clang++-3.7" CC="clang-3.7"; fi
  - cd deps
  - ls
  - if [ ! -f cache ]; then git clone https://github.com/glfw/glfw.git; fi
  - if [ ! -f cache ]; then cd glfw && mkdir build && cd build && cmake -DCMAKE_INSTALL_PREFIX=.. .. && make install -j2 && cd ../..; fi
  - export GLFW_LOCATION=$(pwd)/glfw
  - if [ ! -f cache ]; then git clone https://github.com/g-truc/glm.git ; fi
  - export GLM_ROOT_DIR=$(pwd)/glm
  - if [ ! -f cache ]; then git clone https://github.com/g-truc/gli.git ; fi
  - export GLI_ROOT_DIR=$(pwd)/gli
  - if [ ! -f cache ]; then git clone https://github.com/miloyip/rapidjson.git ; fi
  - export RAPIDJSON_ROOT_DIR=$(pwd)/rapidjson
  - if [ ! -f cache ]; then git clone https://github.com/libRocket/libRocket.git ; fi
  - if [ ! -f cache ]; then cd libRocket/Build ; fi
  - if [ ! -f cache ]; then cmake -DCMAKE_INSTALL_PREFIX=.. -DBUILD_LUA_BINDINGS=TRUE -DBUILD_UNIVERSAL_BINARIES=OFF; fi
  - if [ ! -f cache ]; then make install -j2 && cd ../.. ; fi
  - if [ ! -f cache ]; then echo "Built librocket" ; fi
  - export ROCKET_ROOT=$(pwd)/libRocket
  - touch cache
  - cd ..

before_script:
  - mkdir build
  - cd build
  - cmake ..

script: make
cache:
  apt: true
  directories:
  - deps
